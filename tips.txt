**Interview Strategies**

1) Understand the Problem
2) Explore Concrete Examples
3) Break it Down
4) Solive/simplify
5) Look Back and Refactor


**Problem Solving Patterns**
+ Frequency Counter
+ Multiple Pointers
+ Sliding Window
+ Divide and Conquer
+ Greedy Algorithms
+ Backtracking


**Sliding Window**
This pattern involves creating a window which can either be an array or number from one position to another.
Depending on a certainc ondition, the window wither increases or closes(and a new window is created)
Very useful for keeping track of a subset of data in an array/string etc.


**Divide and Conquer **
This pattern involves dividing a data set into smaller chunks and then repating a process with a
subset of data. This pattern can tremendously decrease time complexity.


